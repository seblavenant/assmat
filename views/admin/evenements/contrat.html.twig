{% extends 'admin/layout.html.twig' %}

{% block body %}
    <div class="row">
        <div id="breadcrumb" class="col-xs-12">
            <ol class="breadcrumb">
                <li><a href="{{ path('admin_index') }}">Dashboard</a></li>
                <li><a href="{{ path('admin_contrats') }}">Mes contrats</a></li>
                <li>Planning du mois {{ mois }}/{{ annee }}</li>
            </ol>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div id="actions" class="box-content">
                    <a class="btn btn-label-left btn-primary" href="{{ path('admin_bulletins_new', { contratId: contrat.id, mois : mois, annee : annee}) }}">
                        <span><i class="fa fa-plus-square-o"></i></span> 
                        {% if bulletinId is empty and contrat.isGrantedEmployeur(app.security.token.user.contact) %}
                        Créer 
                        {% else %}
                        Voir
                        {% endif %}
                        le bulletin
                    </a>
                    <form id="evenementPeriode" action="{{ path('admin_evenements_contrat_list', { contratId : contrat.id}) }}" method="get">
                        {% include 'admin/common/date.select.html.twig' %}
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row full-calendar">
        {% if contrat.isGrantedEmployeur(app.security.token.user.contact) %}
        <div class="col-sm-3">
            <div id="external-events">
                <h4 class="page-header" id="events-templates-header">Evénements</h4>

                {% for evenementType in evenementsType %}
                    <div class="external-event" data-id="{{ evenementType.id }}">{{ evenementType.label }}</div>
                {% endfor %}
            </div>
        </div>
        {% endif %}
        <div class="col-sm-{{ contrat.isGrantedEmployeur(app.security.token.user.contact) ? '9' : '12' }}">
            <div id="loader"></div>
            <div id="calendar"></div>
        </div>
    </div>
{% endblock %}

{% block specificsJavascripts %}
<script>
    var loader = {
        pendingStart: function(){
            $('.fc-center').html('<img alt="preloader" class="devoops-getdata" src="/img/devoops_getdata.gif">');
            $('#loader').show();
        },
        pendingStop: function(){
            $('.fc-center').html('');
            $('#loader').hide();
        }
    };

    $(function()
    {
        $('#evenementAnnee option').each(function(){
            if($(this).val() == '{{ annee }}')
            {
                $(this).attr('selected', true);
            }
        });

        $('#evenementMois option').each(function(){
            if($(this).val() == '{{ mois }}')
            {
                $(this).attr('selected', true);
            }
        });

        $('#evenementPeriode').submit(function(e){
            e.preventDefault();
            var params = new Array();
            params['annee'] = $('#evenementAnnee').val();
            params['mois'] = $('#evenementMois').val();

            window.location.href=$(this).attr('action') + '?' + http_build_query(params);
        });

        $('#external-events div.external-event').each(function()
        {
            $(this).data('eventObject', {
                title: $.trim($(this).text()),
                typeId: $(this).data('id')
            });
            $(this).draggable({
                zIndex: 999,
                revert: true,
                revertDuration: 0
            });
        });
    });

    var calendar = $('#calendar').fullCalendar({
        events: [
            {% for evenement in evenements %}
            {
                start: '{{ evenement.date | date('Y-m-d') }}T{{ evenement.heureDebut | date('H:i:s') }}',
                end: '{{ evenement.date | date('Y-m-d') }}T{{ evenement.heureFin | date('H:i:s') }}',
                title: '{{ evenement.type.label }}',
                allDay: {% if evenement.heureDebut | date('H:i') == '00:00' and evenement.heureFin | date('H:i') == '00:00' %}true{% else %}false{% endif %}
            },
            {% endfor %}
            // borne de date non editable
            {
                start: '2000-01-01T00:00:00',
                end: '{{ annee }}-{{ mois }}-01T00:00:00',
                overlap: false,
                rendering: 'background',
                color: '#ddd'
            },
            {
                start: '{{ annee }}-{{ "%02d"|format(mois + 1) }}-01T00:00:00',
                end: '2100-01-01T00:00:00',
                overlap: false,
                rendering: 'background',
                color: '#ddd'
            }
        ],
        defaultDate: moment('{{ annee }}-{{ mois }}-01'),
        header: {
            left: 'prev,next',
            center: '',
            right: ''
        },
        defaultView: 'agendaWeek',
        selectable: true,
        lang: 'fr',
        editable: true,
        droppable: true,
        select: function(start, end, allDay)
        {
            loader.pendingStart();

            if(start < moment('{{ annee }}-{{ mois }}-01') || end >= moment('{{ annee }}-{{ "%02d"|format(mois + 1) }}-01'))
            {
                console.log('invalid range');
                calendar.fullCalendar('unselect');
                loader.pendingStop();
                Notifier.error('Vous ne pouvez pas éditer d\'évenement en dehors du mois en cours');
                return;
            }

            console.log('select');
            $.ajax({
                method: 'POST',
                url: '{{ path('admin_evenements_set', {contratId: contrat.id}) }}',
                data: {
                    evenements: {
                        date : start.format('YYYY-MM-DD'),
                        heureDebut : start.format('HH:mm'),
                        heureFin : end.format('HH:mm'),
                        contratId : '{{ contrat.id }}',
                        typeId : 1
                    }
                }
            })
            .success(function(msg)
            {
                calendar.fullCalendar('clientEvents', function(event)
                {
                    if(start.format('YYYY-MM-DD') == event.start.format('YYYY-MM-DD'))
                    {
                        calendar.fullCalendar( 'removeEvents', event._id );
                    }
                });

                calendar.fullCalendar('renderEvent', {
                    title: '',
                    description: '',
                    start: start.format('YYYY-MM-DD HH:mm:ss'),
                    end: end.format('YYYY-MM-DD HH:mm:ss'),
                }, true);
            })
            .error(function(Xhr, textStatus)
            {
                calendar.fullCalendar('unselect');
            })
            .always(function()
            {
                loader.pendingStop();
            })
            ;
        },
        eventDrop: function(event, delta, revertFunc)
        {
            console.log('eventDrop');
            loader.pendingStart();
            if(event.start.format('YYYY-MM-DD') != moment(event.start._i).format('YYYY-MM-DD'))
            {
                revertFunc();
                loader.pendingStop();
                return;
            }

            $.ajax({
                method: 'POST',
                url: '{{ path('admin_evenements_set', {contratId: contrat.id}) }}',
                data: {
                    evenements: {
                        date : event.start.format('YYYY-MM-DD'),
                        heureDebut : event.start.format('HH:mm'),
                        heureFin : event.end.format('HH:mm'),
                        contratId : '{{ contrat.id }}',
                        typeId : 1
                    }
                }
            })
            .success(function(msg)
            {
                calendar.fullCalendar('unselect');
            })
            .error(function(Xhr, textStatus)
            {
                revertFunc();
            })
            .always(function()
            {
                loader.pendingStop();
            })
            ;
        },
        eventResize: function(event, delta, revertFunc)
        {
            console.log('eventResize');
            loader.pendingStart();
            $.ajax({
                method: 'POST',
                url: '{{ path('admin_evenements_set', {contratId: contrat.id}) }}',
                data: {
                    evenements: {
                        date : event.start.format('YYYY-MM-DD'),
                        heureDebut : event.start.format('HH:mm'),
                        heureFin : event.end.format('HH:mm'),
                        contratId : '{{ contrat.id }}',
                        typeId : 1
                    }
                }
            })
            .success(function(msg)
            {
                calendar.fullCalendar('unselect');
            })
            .error(function(Xhr, textStatus)
            {
                revertFunc();
            })
            .always(function()
            {
                loader.pendingStop();
            })
            ;
        },
        drop: function(date, allDay)
        {
            console.log('drop');
            loader.pendingStart();
            if(date < moment('{{ annee }}-{{ mois }}-01') || date >= moment('{{ annee }}-{{ "%02d"|format(mois + 1) }}-01'))
            {
                console.log('invalid range');
                calendar.fullCalendar('unselect');
                loader.pendingStop();
                Notifier.error('Vous ne pouvez pas éditer d\'évenement en dehors du mois en cours');
                return;
            }

            var originalEventObject = $(this).data('eventObject');
            var copiedEventObject = $.extend({}, originalEventObject);
            copiedEventObject.start = date;
            copiedEventObject.allDay = allDay;

            $.ajax({
                method: 'POST',
                url: '{{ path('admin_evenements_set', {contratId: contrat.id}) }}',
                data: {
                    evenements: {
                        date : date.format('YYYY-MM-DD'),
                        contratId : '{{ contrat.id }}',
                        typeId : copiedEventObject.typeId
                    }
                }
            })
            .success(function(msg)
            {
                calendar.fullCalendar('clientEvents', function(event)
                {
                    if(date.format('YYYY-MM-DD') == event.start.format('YYYY-MM-DD'))
                    {
                        calendar.fullCalendar( 'removeEvents', event._id );
                    }
                });

                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
            })
            .error(function(Xhr, textStatus)
            {
                calendar.fullCalendar( 'unselect' );
            })
            .always(function()
            {
                loader.pendingStop();
            });
            ;
        },
        eventClick: function(calEvent, jsEvent, view)
        {
            console.log('eventClick');
            loader.pendingStart();
            if(confirm('Etes vous sur de vouloir supprimer cet événement ?'))
            {
                $.ajax({
                    method: 'DELETE',
                    url: '{{ path('admin_evenements_delete', {contratId: contrat.id}) }}',
                    data: {
                        date : calEvent.start.format('YYYY-MM-DD'),
                    }
                })
                .success(function(msg)
                {
                    calendar.fullCalendar( 'removeEvents', calEvent._id );
                })
                .always(function()
                {
                    loader.pendingStop();
                })
            }
            else
            {
                loader.pendingStop();
            }
        }
    });
</script>
{% endblock %}